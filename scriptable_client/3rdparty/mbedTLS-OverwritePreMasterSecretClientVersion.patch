--- a/include/mbedtls/ssl.h	2021-07-01 08:32:58.374715572 +0200
+++ b/include/mbedtls/ssl.h	2021-07-01 09:44:24.270061693 +0200
@@ -1194,6 +1194,11 @@
     unsigned int dtls_srtp_mki_support : 1; /* support having mki_value
                                                in the use_srtp extension     */
 #endif
+
+    /* The config is extended to support manipulations*/
+
+    unsigned int overwrite_pms_version : 1; /*!< overwrite the PreMasterSecret.client_version? */
+    unsigned char pms_version[2]; /*!< value for overwriting PreMasterSecret.client_version */
 };
 
 struct mbedtls_ssl_context
--- a/library/ssl_cli.c	2021-07-01 08:32:58.394715509 +0200
+++ b/library/ssl_cli.c	2021-07-01 08:43:53.065172370 +0200
@@ -2859,9 +2859,19 @@
      *      opaque random[46];
      *  } PreMasterSecret;
      */
-    mbedtls_ssl_write_version( ssl->conf->max_major_ver,
+    
+    if ( ssl->conf->overwrite_pms_version != 0 )
+    {
+        mbedtls_ssl_write_version( ssl->conf->pms_version[0], 
+                                ssl->conf->pms_version[1],
+                                ssl->conf->transport, p );
+    }
+    else
+    {
+        mbedtls_ssl_write_version( ssl->conf->max_major_ver,
                                ssl->conf->max_minor_ver,
                                ssl->conf->transport, p );
+    }
 
     if( ( ret = ssl->conf->f_rng( ssl->conf->p_rng, p + 2, 46 ) ) != 0 )
     {
