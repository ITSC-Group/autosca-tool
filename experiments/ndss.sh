#! /bin/bash
REPETITIONS=50000
DATASETFOLDER="/home/datasets"
tc qdisc replace dev docker0 root netem delay "2ms"
./start.sh --name bearssl-server:0.6 --docker --tlsattacker --port 44671 --datasetfolder $DATASETFOLDER --dockerarguments "-v cert-data:/cert/:ro,nocopy" --clientarguments "--repetitions $REPETITIONS --skip --noskip" --serverarguments "-p 4433 -cert /cert/rsa2048cert.pem -key /cert/rsa2048key.pem" &
./start.sh --name boringssl-server:chromium-stable --docker --tlsattacker --port 44651 --datasetfolder $DATASETFOLDER --dockerarguments "-v cert-data:/cert/:ro,nocopy" --clientarguments "--repetitions $REPETITIONS --skip --noskip" --serverarguments "-accept 4433 -cert /cert/rsa2048cert.pem -key /cert/rsa2048key.pem -loop" &
./start.sh --name botan-server:2.18.1 --docker --tlsattacker --port 44681 --datasetfolder $DATASETFOLDER --dockerarguments "-v cert-data:/cert/:ro,nocopy" --clientarguments "--repetitions $REPETITIONS --skip --noskip --nosni" --serverarguments "/cert/rsa2048cert.pem /cert/rsa2048key.pem --port=4433 --policy=/compat.txt" &
./start.sh --name bouncycastle-server:1.64 --docker --tlsattacker --port 44472 --datasetfolder $DATASETFOLDER --dockerarguments "-v cert-data:/cert/:ro,nocopy" --clientarguments "--repetitions $REPETITIONS --skip --noskip" --serverarguments "4433 /cert/keys.jks password rsa2048 /cert/keys.jks password ec256" &
./start.sh --name gnutls-server:3.7.2 --docker --tlsattacker --port 44621 --datasetfolder $DATASETFOLDER --dockerarguments "-v cert-data:/cert/:ro,nocopy" --clientarguments "--repetitions $REPETITIONS --skip --noskip" --serverarguments "--port=4433 --x509certfile=/cert/rsa2048cert.pem --x509keyfile=/cert/rsa2048key.pem --disable-client-cert" &
./start.sh --name libressl-server:3.3.3 --docker --tlsattacker --port 44661 --datasetfolder $DATASETFOLDER --dockerarguments "-v cert-data:/cert/:ro,nocopy" --clientarguments "--repetitions $REPETITIONS --skip --noskip"  --serverarguments "-accept 4433 -key /cert/rsa2048key.pem -cert /cert/rsa2048cert.pem" &
./start.sh --name matrixssl-server:4.3.0 --docker --tlsattacker --port 44463 --datasetfolder $DATASETFOLDER --clientarguments "--repetitions $REPETITIONS --skip --noskip" &
./start.sh --name mbedtls-server:3.0.0 --docker --tlsattacker --port 44494 --datasetfolder $DATASETFOLDER --dockerarguments "-v cert-data:/cert/:ro,nocopy" --clientarguments "--repetitions $REPETITIONS --skip --noskip" --serverarguments "crt_file=/cert/rsa2048cert.pem key_file=/cert/rsa2048key.pem server_port=4433" &
./start.sh --name ocamltls-server:0.13.2 --docker --tlsattacker --port 44691 --datasetfolder $DATASETFOLDER --dockerarguments "-v cert-data:/cert/:ro,nocopy" --clientarguments "--repetitions $REPETITIONS --skip --noskip" &
./start.sh --name openssl-server:1.1.1k --docker --tlsattacker --port 44441 --datasetfolder $DATASETFOLDER --dockerarguments "-v cert-data:/cert/:ro,nocopy" --clientarguments "--repetitions $REPETITIONS --skip --noskip" --serverarguments "-key /cert/rsa2048key.pem -cert /cert/rsa2048cert.pem" &
./start.sh --name s2n-server:1.0.12 --docker --tlsattacker --port 44671 --datasetfolder $DATASETFOLDER --dockerarguments "-v cert-data:/cert/:ro,nocopy" --clientarguments "--repetitions $REPETITIONS --skip --noskip" --serverarguments "localhost 4433 --cert /cert/rsa2048certs2n.pem --key /cert/rsa2048key.pem --parallelize" &
./start.sh --name tlslite_ng-server:0.8.0-alpha41 --docker --tlsattacker --port 44681 --datasetfolder $DATASETFOLDER --dockerarguments "-v cert-data:/cert/:ro,nocopy" --clientarguments "--repetitions $REPETITIONS --skip --noskip" --serverarguments "-c /cert/rsa2048cert.pem -k /cert/rsa2048key.pem 0.0.0.0:4433" &
./start.sh --name wolfssl-server:4.7.1r-stable --docker --tlsattacker --port 44601 --datasetfolder $DATASETFOLDER --dockerarguments "-v cert-data:/cert/:ro,nocopy" --clientarguments "--repetitions $REPETITIONS --skip --noskip" --serverarguments "-p 4433 -c /cert/rsa2048cert.pem -k /cert/rsa2048key.pem -i -b -l TLS_RSA_WITH_3DES_EDE_CBC_SHA:TLS_RSA_WITH_AES_128_CBC_SHA:TLS_RSA_WITH_AES_128_CBC_SHA256:TLS_RSA_WITH_AES_256_CBC_SHA256" &

wait
